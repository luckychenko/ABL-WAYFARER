
const { Pool } = require('pg');
const dotenv = require('dotenv');

dotenv.config();

// database connection
let dbEnv = '';
if (process.env.NODE_ENV === 'test') {
  dbEnv = process.env.TEST_DATABASE_URL;
} else {
  dbEnv = process.env.DATABASE_URL;
}

console.log('inconfig', process.env.NODE_ENV);
console.log('inconfig', dbEnv);
const pool = new Pool({
  connectionString: dbEnv,
});

pool.on('connect', () => {
  console.log('connected to the db');
});

/**
 * Create Tables
 */

const createTables = () => {
  const queryText =
    `CREATE TABLE IF NOT EXISTS User
    (
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 3333 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    email text COLLATE pg_catalog."default",
    first_name text COLLATE pg_catalog."default",
    last_name text COLLATE pg_catalog."default",
    password text COLLATE pg_catalog."default",
    is_admin boolean DEFAULT false,
    CONSTRAINT "User_pkey" PRIMARY KEY (id),
    CONSTRAINT uuid UNIQUE (email)
        INCLUDE(email)
  );

  CREATE TABLE IF NOT EXISTS Booking
  (
      id integer NOT NULL,
      trip_id integer,
      user_id integer,
      created_on date,
      CONSTRAINT "Booking_pkey" PRIMARY KEY (id),
      CONSTRAINT "foreign _key_trip" FOREIGN KEY (trip_id)
          REFERENCES Trip (id) MATCH SIMPLE
          ON UPDATE NO ACTION
          ON DELETE NO ACTION,
      CONSTRAINT foreign_key_user FOREIGN KEY (user_id)
          REFERENCES User (id) MATCH SIMPLE
          ON UPDATE NO ACTION
          ON DELETE NO ACTION
  );

  CREATE TABLE IF NOT EXISTS Bus
  (
      id integer NOT NULL,
      number_plate "char",
      manufacturer "char",
      model "char",
      year "char",
      capacity integer,
      CONSTRAINT "Bus_pkey" PRIMARY KEY (id),
      CONSTRAINT uuid_bus UNIQUE (number_plate, id)

  );

  CREATE TABLE IF NOT EXISTS Trip
  (
      id integer NOT NULL,
      bus_id integer,
      origin "char",
      destination "char",
      trip_date date,
      fare double precision,
      status "char",
      CONSTRAINT "Trip_pkey" PRIMARY KEY (id)
  );`;

  pool.query(queryText)
    .then((res) => {
      console.log(res);
      pool.end();
    })
    .catch((err) => {
      console.log(err);
      pool.end();
    });
}


/**
 * Drop Tables
 */
const dropTables = () => {
  const queryText = 'DROP TABLE IF EXISTS User, Booking, Bus, Trip';
  pool.query(queryText)
    .then((res) => {
      console.log(res);
      pool.end();
    })
    .catch((err) => {
      console.log(err);
      pool.end();
    });
}

pool.on('remove', () => {
  console.log('client removed');
  process.exit(0);
});

module.exports = {
  createTables,
  dropTables
};

require('make-runnable');
